datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")        // Pooler 6543 -> runtime API
  directUrl = env("DIRECT_DATABASE_URL") // Directa 5432 -> migraciones/Studio
}

generator client {
  provider = "prisma-client-js"
}

enum Provider {
  STRIPE
  MERCADOPAGO
}

enum RechargeStatus {
  PENDING
  SUCCEEDED
  FAILED
  CANCELED
}

enum LedgerType {
  CREDIT
  DEBIT
}

enum LedgerStatus {
  PENDING
  POSTED
  REVERSED
}

enum DispenseStatus {
  STARTED
  COMPLETED
  FAILED
  CANCELED
}

model User {
  id        String   @id @default(cuid())
  clerkId   String?  @unique
  email     String?
  name      String?

  // ðŸ‘‰ NUEVO: telÃ©fono opcional
  phone     String?

  createdAt DateTime @default(now())

  wallet     Wallet?
  recharges  Recharge[]
  ledger     LedgerEntry[]
  dispenses  Dispense[]
}

model Wallet {
  id           String   @id @default(cuid())
  userId       String   @unique
  balanceCents Int      @default(0)
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model Recharge {
  id                String         @id @default(cuid())
  userId            String
  provider          Provider
  amountCents       Int
  bonusCents        Int            @default(0)
  currency          String
  status            RechargeStatus @default(PENDING)
  providerPaymentId String?        @unique
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  user              User           @relation(fields: [userId], references: [id])

  @@index([userId, createdAt])
}

model LedgerEntry {
  id          String       @id @default(cuid())
  userId      String
  type        LedgerType
  amountCents Int
  currency    String
  description String?
  source      String?
  externalId  String?      @unique
  status      LedgerStatus @default(POSTED)
  createdAt   DateTime     @default(now())
  user        User         @relation(fields: [userId], references: [id])

  @@index([userId, createdAt])
}

model WebhookEvent {
  id         String   @id @default(cuid())
  provider   Provider
  eventId    String   @unique
  receivedAt DateTime @default(now())
}

model Dispense {
  id                 String         @id @default(cuid())
  userId             String
  liters             Float
  pricePerLiterCents Int
  totalCents         Int
  currency           String
  status             DispenseStatus @default(COMPLETED)
  machineId          String?
  machineLocation    String?
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
  user               User           @relation(fields: [userId], references: [id])

  @@index([userId, createdAt])
}
